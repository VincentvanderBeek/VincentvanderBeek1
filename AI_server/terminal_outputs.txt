(base) root@27a2a10be0f9:~# cd VincentvanderBeek1

(base) root@27a2a10be0f9:~/VincentvanderBeek1# python AI_server/sentiment_analysis_training.py AI_server/training_dataset.csv

2025-06-23 11:59:32.732186: I tensorflow/core/util/port.cc:111] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-06-23 11:59:32.735982: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.
2025-06-23 11:59:32.767080: E tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:9342] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
2025-06-23 11:59:32.767143: E tensorflow/compiler/xla/stream_executor/cuda/cuda_fft.cc:609] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
2025-06-23 11:59:32.767171: E tensorflow/compiler/xla/stream_executor/cuda/cuda_blas.cc:1518] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2025-06-23 11:59:32.773394: I tensorflow/tsl/cuda/cudart_stub.cc:28] Could not find cuda drivers on your machine, GPU will not be used.
2025-06-23 11:59:32.773637: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2025-06-23 11:59:33.518887: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
[INFO] Using dataset: AI_server/training_dataset.csv
[INFO] Loaded 39976 valid rows
2025-06-23 11:59:35.459820: W tensorflow/core/common_runtime/gpu/gpu_device.cc:2211] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...
[INFO] Training Keras model...
Epoch 1/50
900/900 [==============================] - 5s 5ms/step - loss: 0.6375 - accuracy: 0.7852 - val_loss: 0.2678 - val_accuracy: 0.9149
Epoch 2/50
900/900 [==============================] - 5s 5ms/step - loss: 0.2066 - accuracy: 0.9335 - val_loss: 0.2537 - val_accuracy: 0.9196
Epoch 3/50
900/900 [==============================] - 5s 5ms/step - loss: 0.1316 - accuracy: 0.9577 - val_loss: 0.2726 - val_accuracy: 0.9187
Epoch 4/50
900/900 [==============================] - 4s 5ms/step - loss: 0.0940 - accuracy: 0.9690 - val_loss: 0.3073 - val_accuracy: 0.9174
Epoch 5/50
900/900 [==============================] - ETA: 0s - loss: 0.0661 - accuracy: 0.9790Restoring model weights from the end of the best epoch: 2.
900/900 [==============================] - 5s 5ms/step - loss: 0.0661 - accuracy: 0.9790 - val_loss: 0.3470 - val_accuracy: 0.9168
Epoch 5: early stopping
[INFO] Test accuracy: 0.9175

Classification Report:

              precision    recall  f1-score   support

       anger       0.89      0.86      0.88      1000
     disgust       0.89      0.94      0.92      1000
        fear       0.89      0.89      0.89      1000
   happiness       0.93      0.92      0.92      1000
     neutral       0.98      0.98      0.98      1996
     sadness       0.90      0.90      0.90      1000
    surprise       0.88      0.88      0.88      1000

    accuracy                           0.92      7996
   macro avg       0.91      0.91      0.91      7996
weighted avg       0.92      0.92      0.92      7996

/opt/conda/lib/python3.11/site-packages/keras/src/engine/training.py:3079: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.
  saving_api.save_model(
[INFO] Keras model saved as sentiment_model_keras.h5
[INFO] TF-IDF vocabulary saved to tfidf_vocab.json
[INFO] Label classes saved to label_classes.json
[INFO] Model config saved as model_config.json
(base) root@27a2a10be0f9:~/VincentvanderBeek1# 